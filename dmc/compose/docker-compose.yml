version: "3.7"

networks:
  global:
    external: true
  local:
    external: false

services:

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    restart: unless-stopped
    #security_opt: # Required for Docker versions below 20.10.10, update Docker for long term solution. Source: https://docs.linuxserver.io/faq#jammy
    #  - seccomp=unconfined
    networks:
      - global
      - local
    environment:
      - PUID=${ENV_PUID}
      - PGID=${ENV_PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${SERVICES_DIR}/jellyfin:/config
      - ${DATA_DIR}/media:/data/media
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dmc-jellyfin.rule=Host(`${SUB_DOMAIN_JELLYFIN}.${DOMAIN}`)"
      - "traefik.http.routers.dmc-jellyfin.tls=true"
      - "traefik.http.services.dmc-jellyfin.loadbalancer.server.port=8096"
      - "traefik.http.routers.dmc-jellyfin.tls.certresolver=letsencrypt"
      #- "traefik.http.routers.dmc-jellyfin.middlewares=redirect-to-https"
      - "traefik.docker.network=global"

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    restart: unless-stopped
    networks:
      - global
      - local
    environment:
      - PUID=${ENV_PUID}
      - PGID=${ENV_PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${SERVICES_DIR}/radarr:/config
      - ${DATA_DIR}:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dmc-radarr.rule=Host(`${SUB_DOMAIN_RADARR}.${DOMAIN}`)"
      - "traefik.http.routers.dmc-radarr.tls=true"
      - "traefik.http.services.dmc-radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.dmc-radarr.tls.certresolver=letsencrypt"
      #- "traefik.http.routers.dmc-radarr.middlewares=redirect-to-https"
      - "traefik.docker.network=global"
      # Basic auth
      - "traefik.http.middlewares.dmc-auth.basicauth.usersfile=/.htpasswd"
      - "traefik.http.routers.dmc-radarr.middlewares=dmc-auth"

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    #security_opt: # Required for Docker versions below 20.10.10, update Docker for long term solution. Source: https://docs.linuxserver.io/faq#jammy
    #  - seccomp=unconfined
    networks:
      - global
      - local
    environment:
      - PUID=${ENV_PUID}
      - PGID=${ENV_PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${SERVICES_DIR}/sonarr:/config
      - ${DATA_DIR}:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dmc-sonarr.rule=Host(`${SUB_DOMAIN_SONARR}.${DOMAIN}`)"
      - "traefik.http.routers.dmc-sonarr.tls=true"
      - "traefik.http.services.dmc-sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.dmc-sonarr.tls.certresolver=letsencrypt"
      #- "traefik.http.routers.dmc-sonarr.middlewares=redirect-to-https"
      - "traefik.docker.network=global"
      # Basic auth
      - "traefik.http.middlewares.dmc-auth.basicauth.usersfile=/.htpasswd"
      - "traefik.http.routers.dmc-sonarr.middlewares=dmc-auth"

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    restart: unless-stopped
    networks:
      - global
      - local
    environment:
      - PUID=${ENV_PUID}
      - PGID=${ENV_PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${SERVICES_DIR}/prowlarr:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dmc-prowlarr.rule=Host(`${SUB_DOMAIN_PROWLARR}.${DOMAIN}`)"
      - "traefik.http.routers.dmc-prowlarr.tls=true"
      - "traefik.http.services.dmc-prowlarr.loadbalancer.server.port=9696"
      - "traefik.http.routers.dmc-prowlarr.tls.certresolver=letsencrypt"
      #- "traefik.http.routers.dmc-prowlarr.middlewares=redirect-to-https"
      - "traefik.docker.network=global"
      # Basic auth
      - "traefik.http.middlewares.dmc-auth.basicauth.usersfile=/.htpasswd"
      - "traefik.http.routers.dmc-prowlarr.middlewares=dmc-auth"

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    restart: unless-stopped
    networks:
      - global
      - local
    environment:
      - LOG_LEVEL=debug
      - TZ=${TIMEZONE}
    volumes:
      - ${SERVICES_DIR}/jellyseerr:/app/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dmc-jellyseerr.rule=Host(`${SUB_DOMAIN_JELLYSEERR}.${DOMAIN}`)"
      - "traefik.http.routers.dmc-jellyseerr.tls=true"
      - "traefik.http.services.dmc-jellyseerr.loadbalancer.server.port=5055"
      - "traefik.http.routers.dmc-jellyseerr.tls.certresolver=letsencrypt"
      #- "traefik.http.routers.dmc-jellyseerr.middlewares=redirect-to-https"
      - "traefik.docker.network=global"

  rdtclient:
    image: rogerfar/rdtclient
    restart: unless-stopped
    networks:
      - global
      - local
    environment:
      - PUID=${ENV_PUID}
      - PGID=${ENV_PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${DATA_DIR}/downloads:/data/downloads
      - ${SERVICES_DIR}/rdtclient:/data/db
    logging:
      driver: json-file
      options:
        max-size: 10m
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dmc-rdtclient.rule=Host(`${SUB_DOMAIN_RDTCLIENT}.${DOMAIN}`)"
      - "traefik.http.routers.dmc-rdtclient.tls=true"
      - "traefik.http.services.dmc-rdtclient.loadbalancer.server.port=6500"
      - "traefik.http.routers.dmc-rdtclient.tls.certresolver=letsencrypt"
      #- "traefik.http.routers.dmc-rdtclient.middlewares=redirect-to-https"
      - "traefik.docker.network=global"
      # Basic auth
      - "traefik.http.middlewares.dmc-auth.basicauth.usersfile=/.htpasswd"
      - "traefik.http.routers.dmc-rdtclient.middlewares=dmc-auth"

  wizarr:
    image: ghcr.io/wizarrrr/wizarr
    restart: unless-stopped
    networks:
      - global
      - local
    volumes:
      - ${SERVICES_DIR}/wizarr:/data/database
    environment:
      - APP_URL=https://${SUB_DOMAIN_WIZARR}.${DOMAIN}
      - TZ=${TIMEZONE}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dmc-wizarr.rule=Host(`${SUB_DOMAIN_WIZARR}.${DOMAIN}`)"
      - "traefik.http.routers.dmc-wizarr.tls=true"
      - "traefik.http.services.dmc-wizarr.loadbalancer.server.port=5690"
      - "traefik.http.routers.dmc-wizarr.tls.certresolver=letsencrypt"
      #- "traefik.http.routers.dmc-wizarr.middlewares=redirect-to-https"
      - "traefik.docker.network=global"

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    restart: unless-stopped
    networks:
      - global
      - local
    environment:
      - PUID=${ENV_PUID}
      - PGID=${ENV_PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${SERVICES_DIR}/sabnzbd:/config
      - ${DATA_DIR}/downloads/sabnzbd/complete:/downloads
      - ${DATA_DIR}/downloads/sabnzbd/incomplete:/incomplete-downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dmc-sabnzbd.rule=Host(`${SUB_DOMAIN_SABNZBD}.${DOMAIN}`)"
      - "traefik.http.routers.dmc-sabnzbd.tls=true"
      - "traefik.http.services.dmc-sabnzbd.loadbalancer.server.port=8080"
      - "traefik.http.routers.dmc-sabnzbd.tls.certresolver=letsencrypt"
      #- "traefik.http.routers.dmc-sabnzbd.middlewares=redirect-to-https"
      - "traefik.docker.network=global"
      # Basic auth
      - "traefik.http.middlewares.dmc-auth.basicauth.usersfile=/.htpasswd"
      - "traefik.http.routers.dmc-sabnzbd.middlewares=dmc-auth"

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    restart: unless-stopped
    networks:
      - global
      - local
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TIMEZONE}
    ports:
      - "${PORT:-8191}:8191"
    labels:
      - "traefik.enable=false"